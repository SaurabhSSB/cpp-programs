#include <bits/stdc++.h>
using namespace std;

int main()
{
    cout << "DSA_With_CPP/\n"
         << "│\n"
         << "├── Arrays_And_Hashing/\n"
         << "│   ├── two_sum.cpp\n"
         << "│   ├── group_anagrams.cpp\n"
         << "│   ├── contains_duplicate.cpp\n"
         << "│   └── notes.md\n"
         << "├── Two_Pointers/\n"
         << "│   ├── valid_palindrome.cpp\n"
         << "│   ├── three_sum.cpp\n"
         << "│   ├── trapping_rain_water.cpp\n"
         << "│   └── notes.md\n"
         << "├── Sliding_Window/\n"
         << "│   ├── best_time_to_buy_sell_stock.cpp\n"
         << "│   ├── longest_substring_without_repeat.cpp\n"
         << "│   ├── minimum_window_substring.cpp\n"
         << "│   └── notes.md\n"
         << "├── Stack/\n"
         << "│   ├── valid_parentheses.cpp\n"
         << "│   ├── daily_temperatures.cpp\n"
         << "│   ├── min_stack.cpp\n"
         << "│   └── notes.md\n"
         << "├── Binary_Search/\n"
         << "│   ├── binary_search.cpp\n"
         << "│   ├── search_rotated_array.cpp\n"
         << "│   ├── median_of_two_sorted_arrays.cpp\n"
         << "│   └── notes.md\n"
         << "├── Linked_List/\n"
         << "│   ├── reverse_linked_list.cpp\n"
         << "│   ├── merge_two_sorted_lists.cpp\n"
         << "│   ├── detect_cycle.cpp\n"
         << "│   └── notes.md\n"
         << "├── Trees/\n"
         << "│   ├── max_depth_binary_tree.cpp\n"
         << "│   ├── invert_binary_tree.cpp\n"
         << "│   ├── serialize_deserialize_tree.cpp\n"
         << "│   └── notes.md\n"
         << "├── Tries/\n"
         << "│   ├── implement_trie.cpp\n"
         << "│   ├── word_search.cpp\n"
         << "│   ├── prefix_and_suffix_search.cpp\n"
         << "│   └── notes.md\n"
         << "├── Backtracking/\n"
         << "│   ├── subsets.cpp\n"
         << "│   ├── permutations.cpp\n"
         << "│   ├── word_search.cpp\n"
         << "│   └── notes.md\n"
         << "├── Graphs/\n"
         << "│   ├── clone_graph.cpp\n"
         << "│   ├── course_schedule.cpp\n"
         << "│   ├── number_of_islands.cpp\n"
         << "│   └── notes.md\n"
         << "├── Dynamic_Programming/\n"
         << "│   ├── climbing_stairs.cpp\n"
         << "│   ├── coin_change.cpp\n"
         << "│   ├── longest_increasing_subsequence.cpp\n"
         << "│   └── notes.md\n"
         << "└── Miscellaneous/\n"
         << "    ├── sorting_algorithms.cpp\n"
         << "    ├── searching_algorithms.cpp\n"
         << "    └── miscellaneous_problems.cpp\n";

    return 0;
}
